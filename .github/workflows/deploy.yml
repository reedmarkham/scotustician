name: CI/CD pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - '*.md'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      deploy_shared: ${{ steps.filter.outputs.shared }}
      deploy_db: ${{ steps.filter.outputs.db }}
      deploy_ingest: ${{ steps.filter.outputs.ingest }}
      deploy_transformers: ${{ steps.filter.outputs.transformers }}
      deploy_clustering: ${{ steps.filter.outputs.clustering }}
      deploy_visualization: ${{ steps.filter.outputs.visualization }}
      deploy_orchestration: ${{ steps.filter.outputs.orchestration }}
    steps:
      - uses: actions/checkout@v3

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            shared:
              - 'infrastructure/**'
              - 'database/**'
              - '.github/workflows/**'
            db:
              - 'infrastructure/lib/scotustician-db-stack.ts'
              - 'database/**'
              - '.github/workflows/**'
            ingest:
              - 'infrastructure/**'
              - 'services/ingest/**'
              - '.github/workflows/**'
            transformers:
              - 'infrastructure/**'
              - 'services/transformers/**'
              - 'database/**'
              - '.github/workflows/**'
            clustering:
              - 'infrastructure/**'
              - 'services/clustering/**'
              - 'database/**'
              - '.github/workflows/**'
            visualization:
              - 'infrastructure/**'
              - 'services/visualization/**'
              - '.github/workflows/**'
            orchestration:
              - 'infrastructure/**'
              - 'database/**'
              - '.github/workflows/**'

  deploy_shared:
    needs: plan
    if: needs.plan.outputs.deploy_shared == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianSharedStack"
      outputs_file: "cdk-outputs-shared.json"
      gpu_quota_check: true
    secrets: inherit

  deploy_ingest:
    needs: [plan, deploy_shared]
    if: needs.plan.outputs.deploy_ingest == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianIngestStack"
      outputs_file: "cdk-outputs-ingest.json"
    secrets: inherit

  deploy_transformers:
    needs: [plan, deploy_shared, deploy_ingest, deploy_db]
    if: needs.plan.outputs.deploy_transformers == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianTransformersStack"
      outputs_file: "cdk-outputs-transformers.json"
      gpu_quota_check: true
    secrets: inherit

  deploy_clustering:
    needs: [plan, deploy_shared, deploy_transformers]
    if: needs.plan.outputs.deploy_clustering == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianClusteringStack"
      outputs_file: "cdk-outputs-clustering.json"
    secrets: inherit

  deploy_visualization:
    needs: [plan, deploy_shared, deploy_clustering]
    if: needs.plan.outputs.deploy_visualization == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianVisualizationStack"
      outputs_file: "cdk-outputs-visualization.json"
    secrets: inherit

  deploy_orchestration:
    needs: [plan, deploy_shared, deploy_ingest, deploy_transformers, deploy_clustering]
    if: needs.plan.outputs.deploy_orchestration == 'true'
    uses: ./.github/workflows/deploy-stack.yml
    with:
      stack_name: "ScotusticianOrchestrationStack"
      outputs_file: "cdk-outputs-orchestration.json"
    secrets: inherit

  deploy_db:
    needs: [plan, deploy_shared]
    if: needs.plan.outputs.deploy_db == 'true' && (needs.deploy_shared.result == 'success' || needs.deploy_shared.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: infrastructure
      - name: Deploy ScotusticianDbStack with IAM ARN context
        run: |
          npx cdk deploy ScotusticianDbStack --require-approval never --context awsIamArn=${{ secrets.AWS_IAM_ARN }}
        working-directory: infrastructure
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
