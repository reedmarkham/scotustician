name: Deploy Scotustician Infrastructure

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      deploy_shared: ${{ steps.filter.outputs.shared }}
      deploy_ingest: ${{ steps.filter.outputs.ingest }}
      deploy_transformers: ${{ steps.filter.outputs.transformers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            shared:
              - 'infra/**'
              - '.github/workflows/**'
            ingest:
              - 'infra/**'
              - 'ingest/*'
              - 'ingest/**/*'
            transformers:
              - 'infra/**'
              - 'transformers/*'
              - 'transformers/**/*'

  deploy_shared:
    needs: plan
    if: needs.plan.outputs.deploy_shared == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TOOLKIT_STACK: CDKToolkit-scotustician
      BOOTSTRAP_QUALIFIER: sctstcn
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - run: cd infra && npm ci

      - name: Check GPU quota
        id: gpu_check
        run: |
          echo "gpu_quota=0" >> $GITHUB_OUTPUT
          output=$(aws service-quotas get-service-quota \
            --service-code ec2 \
            --quota-code L-417A2B38 \
            --query 'Quota.Value' --output text 2>&1) || true
          if [[ "$output" =~ ^[0-9]+([.][0-9]+)?$ ]]; then
            echo "gpu_quota=$output" >> $GITHUB_OUTPUT
          fi

      - name: Deploy shared stack
        run: |
          cd infra
          if (( $(echo "${{ steps.gpu_check.outputs.gpu_quota }} >= 1" | bc -l) )); then
            CONTEXT="--context useGpu=true"
            echo "Deploying with GPU context"
          else
            CONTEXT="--context useGpu=false"
            echo "Deploying with CPU fallback context"
          fi

          npx cdk deploy ScotusticianSharedStack \
            --context bootstrapQualifier=$BOOTSTRAP_QUALIFIER \
            --toolkit-stack-name $TOOLKIT_STACK \
            $CONTEXT \
            --outputs-file cdk-outputs-shared.json \
            --require-approval never

      - name: Upload shared outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs-shared
          path: infra/cdk-outputs-shared.json

  deploy_ingest:
    needs: plan
    if: needs.plan.outputs.deploy_ingest == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TOOLKIT_STACK: CDKToolkit-scotustician
      BOOTSTRAP_QUALIFIER: sctstcn
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - run: cd infra && npm ci

      - name: Download shared outputs if available
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: cdk-outputs-shared
          path: infra

      - run: |
          cd infra
          npx cdk deploy ScotusticianIngestStack \
            --context bootstrapQualifier=$BOOTSTRAP_QUALIFIER \
            --toolkit-stack-name $TOOLKIT_STACK \
            --outputs-file cdk-outputs-ingest.json \
            --require-approval never

      - name: Upload ingest outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs-ingest
          path: infra/cdk-outputs-ingest.json

  deploy_transformers:
    needs: plan
    if: needs.plan.outputs.deploy_transformers == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TOOLKIT_STACK: CDKToolkit-scotustician
      BOOTSTRAP_QUALIFIER: sctstcn
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - run: cd infra && npm ci

      - name: Download shared outputs if available
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: cdk-outputs-shared
          path: infra

      - name: Check GPU quota
        id: gpu_check
        run: |
          echo "gpu_quota=0" >> $GITHUB_OUTPUT
          output=$(aws service-quotas get-service-quota \
            --service-code ec2 \
            --quota-code L-417A2B38 \
            --query 'Quota.Value' --output text 2>&1) || true
          if [[ "$output" =~ ^[0-9]+([.][0-9]+)?$ ]]; then
            echo "gpu_quota=$output" >> $GITHUB_OUTPUT
          fi

      - name: Deploy transformers stack
        run: |
          cd infra
          if (( $(echo "${{ steps.gpu_check.outputs.gpu_quota }} >= 1" | bc -l) )); then
            CONTEXT="--context useGpu=true"
            echo "Deploying with GPU context"
          else
            CONTEXT="--context useGpu=false"
            echo "Deploying with CPU fallback context"
          fi

          npx cdk deploy ScotusticianTransformersStack \
            --context bootstrapQualifier=$BOOTSTRAP_QUALIFIER \
            --toolkit-stack-name $TOOLKIT_STACK \
            $CONTEXT \
            --outputs-file cdk-outputs-transformers.json \
            --require-approval never

      - name: Upload transformers outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs-transformers
          path: infra/cdk-outputs-transformers.json

