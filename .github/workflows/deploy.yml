name: Deploy Scotustician Infrastructure and Services

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - '*.md'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      deploy_shared: ${{ steps.filter.outputs.shared }}
      deploy_ingest: ${{ steps.filter.outputs.ingest }}
      deploy_transformers: ${{ steps.filter.outputs.transformers }}
      deploy_clustering: ${{ steps.filter.outputs.clustering }}
      deploy_visualization: ${{ steps.filter.outputs.visualization }}
    steps:
      - uses: actions/checkout@v3

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            shared:
              - 'infrastructure/**'
              - '.github/workflows/**'
            ingest:
              - 'infrastructure/**'
              - 'services/ingest/**'
            transformers:
              - 'infrastructure/**'
              - 'services/transformers/**'
              - '.github/workflows/**'
            clustering:
              - 'infrastructure/**'
              - 'services/clustering/**'
              - '.github/workflows/**'
            visualization:
              - 'infrastructure/**'
              - 'services/visualization/**'
              - '.github/workflows/**'

  deploy_shared:
    needs: plan
    if: needs.plan.outputs.deploy_shared == 'true'
    uses: ./.github/workflows/_deploy-stack.yml
    with:
      stack_name: "ScotusticianSharedStack"
      outputs_file: "cdk-outputs-shared.json"
      gpu_quota_check: true
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_ingest:
    needs: [plan, deploy_shared]
    if: |
      always() && 
      needs.plan.outputs.deploy_ingest == 'true' && 
      (needs.deploy_shared.result == 'success' || needs.deploy_shared.result == 'skipped')
    uses: ./.github/workflows/_deploy-stack.yml
    with:
      stack_name: "ScotusticianIngestStack"
      outputs_file: "cdk-outputs-ingest.json"
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_transformers:
    needs: [plan, deploy_shared, deploy_ingest]
    if: |
      always() && 
      needs.plan.outputs.deploy_transformers == 'true' && 
      (needs.deploy_shared.result == 'success' || needs.deploy_shared.result == 'skipped') &&
      (needs.deploy_ingest.result == 'success' || needs.deploy_ingest.result == 'skipped')
    uses: ./.github/workflows/_deploy-stack.yml
    with:
      stack_name: "ScotusticianTransformersStack"
      outputs_file: "cdk-outputs-transformers.json"
      gpu_quota_check: true
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_clustering:
    needs: [plan, deploy_shared, deploy_transformers]
    if: |
      always() && 
      needs.plan.outputs.deploy_clustering == 'true' && 
      (needs.deploy_shared.result == 'success' || needs.deploy_shared.result == 'skipped') &&
      (needs.deploy_transformers.result == 'success' || needs.deploy_transformers.result == 'skipped')
    uses: ./.github/workflows/_deploy-stack.yml
    with:
      stack_name: "ScotusticianClusteringStack"
      outputs_file: "cdk-outputs-clustering.json"
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_visualization:
    needs: [plan, deploy_shared, deploy_clustering]
    if: |
      always() && 
      needs.plan.outputs.deploy_visualization == 'true' && 
      (needs.deploy_shared.result == 'success' || needs.deploy_shared.result == 'skipped') &&
      (needs.deploy_clustering.result == 'success' || needs.deploy_clustering.result == 'skipped')
    uses: ./.github/workflows/_deploy-stack.yml
    with:
      stack_name: "ScotusticianVisualizationStack"
      outputs_file: "cdk-outputs-visualization.json"
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}